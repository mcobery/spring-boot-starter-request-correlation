plugins {
  id "com.github.hierynomus.license" version "0.16.1"
  id 'com.github.kt3k.coveralls' version '2.12.2'
  id "com.diffplug.spotless" version "6.21.0"
  id 'maven-publish'
  id 'nebula.release' version '19.0.10'
}

ext {
  versions = [
      'assertj'           : '3.24.2',
      'commons'           : [
          'lang3': '3.14.0'
      ],
      'feign'             : '12.4',
      'google'              : [
          'format'            : '1.19.1'
      ],      'junit'             : '4.13.2',
      'mockito'           : '5.13.0',
      'spring'            : [
          'boot'          : '3.3.3',
          'feign'         : '4.1.3'
      ],
  ]
}

apply plugin: 'java-library'
apply plugin: "jacoco"
apply plugin: 'idea'

apply from: 'license.gradle'
apply from: 'release.gradle'

apply plugin: 'pmd'

apply plugin: 'com.github.kt3k.coveralls'

apply from: "${rootProject.projectDir}/gradle/spotless.gradle"

// Release version that won't conflict with the bintray plugin
group = 'com.tipsymcstagger'
version = '4.0.0-SNAPSHOT'
archivesBaseName = "spring-boot-starter-request-correlation"

jar {
  manifest {
    attributes 'Implementation-Title': 'spring-boot-starter-request-correlation',
        'Implementation-Version': version
  }
}

repositories {
  mavenCentral()
}

configurations {
  archives
}

compileJava {
  options.fork = true
}

dependencies {
  annotationProcessor "org.springframework.boot:spring-boot-configuration-processor:${versions.spring.boot}"

  api "org.apache.commons:commons-lang3:${versions.commons.lang3}"

  // For Spring RestTemplate
  implementation "org.springframework.boot:spring-boot-starter-web:${versions.spring.boot}"
  // For Spring WebClient
  implementation "org.springframework.boot:spring-boot-starter-webflux:${versions.spring.boot}"

  // For Feign
  implementation "io.github.openfeign:feign-hc5:${versions.feign}"
  implementation "org.springframework.cloud:spring-cloud-starter-openfeign:${versions.spring.feign}"

  testImplementation "org.assertj:assertj-core:${versions.assertj}"
  testImplementation "org.mockito:mockito-core:${versions.mockito}"
  testImplementation "org.mockito:mockito-junit-jupiter:${versions.mockito}"
  testImplementation "org.springframework.boot:spring-boot-starter-test:${versions.spring.boot}"

}

test {
  useJUnitPlatform {
    includeEngines 'junit-jupiter'
  }

  testLogging {
    events "passed", "skipped", "failed"
    exceptionFormat "full"
    afterSuite { desc, result ->
      if (!desc.parent) { // will match the outermost suite
        println "Results: ${result.resultType} (${result.testCount} tests, ${result.successfulTestCount} successes, ${result.failedTestCount} failures, ${result.skippedTestCount} skipped)"
      }
    }
  }
}

//publishing {
//  if(project.hasProperty('nexusUsername')) {
//    repositories {
//      maven {
//        name = "ossrh"
//        url = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
//        credentials {
//          username = project.nexusUsername
//          password = project.nexusPassword
//        }
//      }
//    }
//  }
//
//  publications {
//    mavenJava {
//      artifact sourcesJar
//      artifact javadocJar
//      artifact testsJar
//
//      versionMapping {
//        usage('java-api') {
//          fromResolutionOf('runtimeClasspath')
//        }
//        usage('java-runtime') {
//          fromResolutionResult()
//        }
//      }
//    }
//  }
//}



publishing {

  repositories {
    maven {
      name = "OSSRH"
      url = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
      credentials {
        username = System.getenv("MAVEN_USERNAME")
        password = System.getenv("MAVEN_PASSWORD")
      }
    }
  }


}
